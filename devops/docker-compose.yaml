version: '3.1'

services:

  mongo:
    image: mongo:6.0
    restart: unless-stopped
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo-data:/data/db

  mongo-express:
    image: mongo-express
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
    depends_on:
      - mongo
  
  db:
    image: mysql:8.0
    restart: unless-stopped
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: secret
    volumes:
      - mysql-data:/var/lib/mysql
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh

  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - 8080:8080
  
  redis:
    image: redis
    restart: unless-stopped
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data

  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - 8082:8081
    depends_on:
      - redis

  prometheus:
    image: 'prom/prometheus:latest'
    restart: unless-stopped
    volumes:
      - './prometheus.yml:/etc/prometheus/prometheus.yml'
      - 'prometheus_data:/prometheus'
    ports:
      - '9090:9090'

  grafana:
    image: 'grafana/grafana:latest'
    restart: unless-stopped
    volumes:
      - 'grafana_data:/var/lib/grafana'
    ports:
      - '8083:3000'

volumes:
  redis-data:
    driver: local
  mysql-data:
    driver: local
  mongo-data:
    driver: local
  grafana_data:
    driver: local
  prometheus_data:
    driver: local